name: Maven Package
on:
  release:
    types: [created]
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-multiplatform:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github 
        settings-path: ${{ github.workspace }}

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ matrix.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ matrix.os }}-m2

    - name: Build with Maven (Windows)
      if: matrix.os == 'windows-latest'
      run: mvn clean package --file pom.xml -B "-Djavafx.platform=${{ matrix.platform }}"

    - name: Build with Maven (Unix)
      if: matrix.os != 'windows-latest'
      run: mvn clean package --file pom.xml -B -Djavafx.platform=${{ matrix.platform }}

    - name: Run tests
      run: mvn test --file pom.xml -B

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifacts-${{ matrix.os }}
        path: |
          target/*.jar
          target/lib/

    - name: Publish to GitHub Packages Apache Maven
      if: github.event_name == 'release' && matrix.os == 'ubuntu-latest'
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
