# This workflow will build a JavaFX package using Maven and then publish it to GitHub packages when a release is created
name: Maven Package

on:
  release:
    types: [created]
  # Optional: Also run on push to main branch for testing
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Clean and Package with Maven
      run: mvn clean package --file pom.xml -B -Djavafx.platform=linux

    - name: Run tests
      run: mvn test --file pom.xml -B

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: jar-artifacts
        path: |
          target/*.jar
          target/lib/

    # Only publish to GitHub Packages on release
    - name: Publish to GitHub Packages Apache Maven
      if: github.event_name == 'release'
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Build on multiple platforms for JavaFX
  build-multiplatform:
    if: github.event_name == 'release'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean package --file pom.xml -B

    - name: Upload platform-specific artifacts
      uses: actions/upload-artifact@v3
      with:
        name: jar-artifacts-${{ matrix.os }}
        path: |
          target/*.jar
          target/lib/
